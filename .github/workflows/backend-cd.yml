name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.1
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root123
          POSTGRES_DB: customer
        ports:
          - 5332:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3

      - name: Send Slack Commit Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: https://github.com/sushanttx/fullstack-filestorage/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack - Deployment Started
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment started :progress_bar: :fingerscrossed:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set Build Number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_ENV

      - name: Send Slack - Maven Build
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":maven: Building with Maven"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..20}; do
            nc -zv localhost 5332 && echo "PostgreSQL is up!" && exit 0
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
          echo "PostgreSQL did not start in time." && exit 1

      - name: Debug PostgreSQL Connection
        run: |
          echo "Checking if PostgreSQL is reachable..."
          pg_isready -h localhost -p 5332 -U postgres



      - name: Build Package and Push to Docker Hub
        run: mvn -ntp -B verify -Ddocker.image.tag=${{ env.BUILD_NUMBER }} jib:build

      - name: Send Slack - Docker Image Pushed
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Image tag:${{ env.BUILD_NUMBER }} pushed to https://hub.docker.com/repository/docker/sushant5x/fullstack-app-backend"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update `Dockerrun.aws.json` with New Image Tag
        run: |
          echo "Updating Dockerrun.aws.json with new tag..."
          sed -i -E 's_(sushant5x/fullstack-app-backend:)([^"]*)_\1'${{ env.BUILD_NUMBER }}'_' ../Dockerrun.aws.json
          echo "Updated Dockerrun.aws.json:"
          cat ../Dockerrun.aws.json

      - name: Send Slack - AWS Deployment Start
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":aws: Starting deployment to Elastic Beanstalk"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ env.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json

      - name: Send Slack - Committing Updated Dockerrun.aws.json
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":githubloading: Committing to repo https://github.com/sushanttx/fullstack-filestorage/"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and Push Updated `Dockerrun.aws.json`
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json with new Docker image tag ${{ env.BUILD_NUMBER }}"
          git push

      - name: Send Slack - Deployment Completed
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Deployment and commit completed :github-check-mark: :party_blob: - http://fullstack-db-env.eba-y3epwet3.ap-south-1.elasticbeanstalk.com/"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack - Job Status
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{ job.status }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
